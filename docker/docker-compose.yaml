version: '3'

networks:
  alura-golang:

services:
  postgres:
    hostname: postgres
    container_name: postgres
    image: "postgres"
    env_file: ../.env
    ports:
      - "5432:5432"
    volumes:
      - ./migrations/docker-database-initial.sql:/docker-entrypoint-initdb.d/docker-database-initial.sql
    networks: ["alura-golang"]
    healthcheck:
      test: pg_isready -U root -d skills
      interval: 10s
      timeout: 3s
      retries: 3

  pgadmin:
    hostname: pgadmin
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file: ../.env
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks: ["alura-golang"]
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  app:
    hostname: app
    container_name: app
    image: alura-golang
    env_file: ../.env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks: ["alura-golang"]
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:8000/api/v1/health"]
      start_period: 5s
      interval: 10s
      timeout: 3s
      retries: 3